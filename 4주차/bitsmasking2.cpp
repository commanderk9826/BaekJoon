#include <bits/stdc++.h>
using namespace std;
const int n=4;
string a[4]={"사과", "딸기", "포도", "배"};
void go(int num){
    string ret="";
    for(int i=0;i<4;i++){
        //idx번째 비트가 켜져있는지 확인하기 : if(S&(1<<idx)) -> i번째 비트가 num이면 배열에 추가
        if(num&(1<<i)) ret+=a[i]+"";
    }
    cout <<ret<<'\n';
    return;
}

int main(){
    for(int i=0; i<n; i++){
        go(2|(1<<i));//1:사과, 2:딸기, 4:포도, 8:배
    }
    return 0;
}

/*
//main함수
|  i |     2|(1 << i)=    |num 값|  go(num)에서 출력되는 과일 |
|––--|––––––OR–––––-------|—————|
| 0  | 0010 | 0001 = 0011 |  3  | 1, 2(사과, 딸기) |
| 1  | 0010 | 0010 = 0010 |  2  | 2(딸기) |
| 2  | 0010 | 0100 = 0110 |  6  | 2, 3(딸기, 포도) |
| 3  | 0010 | 1000 = 1010 |  10 | 2, 4(딸기, 배)|

//go함수
비트마스크 연산 (1 << i)
num&(1 << 0 → 0001 (1)) 
num&(1 << 1 → 0010 (2)) 
num&(1 << 2 → 0100 (4)) 
num&(1 << 3 → 1000 (8)) 


즉, num 값의 특정 비트가 켜져 있으면 a[i] 값을 출력하도록 설계함.
*/